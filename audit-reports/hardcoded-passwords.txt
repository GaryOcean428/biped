backend/src/routes/unified_auth.py:        password = data["password"]
backend/src/routes/unified_auth.py:        password = data["password"]
backend/src/routes/unified_auth.py:@auth_bp.route("/change-password", methods=["POST"])
backend/src/routes/unified_auth.py:        current_password = data["current_password"]
backend/src/routes/unified_auth.py:        new_password = data["new_password"]
backend/src/routes/unified_auth.py:@auth_bp.route("/forgot-password", methods=["POST"])
backend/src/routes/unified_auth.py:@auth_bp.route("/reset-password", methods=["POST"])
backend/src/routes/unified_auth.py:        new_password = data["new_password"]
backend/src/routes/communication.py:                os.environ["SMTP_PASSWORD"] = email_config["smtp_password"]
backend/src/routes/secure_api.py:        password = data.get("password", "")
backend/src/routes/secure_api.py:        password = data.get("password", "")
backend/src/routes/secure_api.py:        password_hash = security_manager.hash_password(password)
backend/src/routes/admin.py:        password = data.get("password")
backend/src/main.py:                admin_password = os.environ.get("ADMIN_PASSWORD")
backend/src/main.py:                    admin_password = secrets.token_urlsafe(16)
backend/src/main.py:                    password_hash=generate_password_hash(admin_password),
backend/src/main.py:                    password_hash=generate_password_hash("password123"),
backend/src/models/user.py:    password_hash = db.Column(db.String(255), nullable=False)
backend/src/models/user.py:        self.password_hash = generate_password_hash(password)
backend/src/models/admin.py:    password_hash = db.Column(db.String(255), nullable=False)
backend/src/models/admin.py:        self.password_hash = generate_password_hash(password)
backend/src/static/auth.js:        const password = form.querySelector('input[type="password"]').value;
backend/src/static/auth.js:        const password = form.querySelector('input[type="password"]').value;
backend/src/static/admin-login.html:                    <label for="password" class="block text-white text-sm font-medium mb-2">
backend/src/static/admin-login.html:                        <input type="password" id="password" name="password" required
backend/src/static/admin-login.html:                        <button type="button" id="togglePassword" class="absolute right-3 top-1/2 transform -translate-y-1/2 text-white text-opacity-70 hover:text-opacity-100">
backend/src/static/admin-login.html:            const passwordInput = document.getElementById('password');
backend/src/static/admin-login.html:            if (passwordInput.type === 'password') {
backend/src/static/admin-login.html:                passwordInput.type = 'text';
backend/src/static/admin-login.html:                passwordInput.type = 'password';
backend/src/static/admin-login.html:            const password = document.getElementById('password').value;
backend/src/static/validation.js:        this.passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$/;
backend/src/static/validation.js:        if (!password || typeof password !== 'string') {
backend/src/static/validation.js:        const passwordResult = this.validatePassword(formData.password);
backend/src/static/validation.js:            errors.password = passwordResult.message;
backend/src/static/validation.js:        if (!formData.password || formData.password.trim() === '') {
backend/src/static/validation.js:            errors.password = 'Password is required';
backend/src/static/validation.js:        const fields = form.querySelectorAll('input[type="email"], input[type="password"], input[type="text"], input[type="tel"]');
backend/src/static/profile.html:                                <form id="change-password-form" class="space-y-6">
backend/src/static/profile.html:                                                <label for="current-password" class="block text-sm font-medium text-gray-700">Current Password</label>
backend/src/static/profile.html:                                                <input type="password" name="current-password" id="current-password" class="input-field mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none sm:text-sm">
backend/src/static/profile.html:                                                <label for="new-password" class="block text-sm font-medium text-gray-700">New Password</label>
backend/src/static/profile.html:                                                <input type="password" name="new-password" id="new-password" class="input-field mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none sm:text-sm">
backend/src/static/profile.html:                                                <label for="confirm-password" class="block text-sm font-medium text-gray-700">Confirm New Password</label>
backend/src/static/profile.html:                                                <input type="password" name="confirm-password" id="confirm-password" class="input-field mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none sm:text-sm">
backend/src/static/profile.html:            const changePasswordForm = document.getElementById('change-password-form');
backend/src/static/profile.html:            changePasswordForm.addEventListener('submit', (e) => {
backend/src/static/profile.html:                const currentPassword = document.getElementById('current-password').value;
backend/src/static/profile.html:                const newPassword = document.getElementById('new-password').value;
backend/src/static/profile.html:                const confirmPassword = document.getElementById('confirm-password').value;
backend/src/static/profile.html:                if (newPassword !== confirmPassword) {
backend/src/static/profile.html:                    document.getElementById('current-password').value = '';
backend/src/static/profile.html:                    document.getElementById('new-password').value = '';
backend/src/static/profile.html:                    document.getElementById('confirm-password').value = '';
backend/src/static/settings.html:                                                <label for="current-password" class="block text-sm font-medium text-gray-700">Current Password</label>
backend/src/static/settings.html:                                                <input type="password" name="current-password" id="current-password" class="input-field mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none sm:text-sm">
backend/src/static/settings.html:                                                <label for="new-password" class="block text-sm font-medium text-gray-700">New Password</label>
backend/src/static/settings.html:                                                <input type="password" name="new-password" id="new-password" class="input-field mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none sm:text-sm">
backend/src/static/settings.html:                                                <label for="confirm-password" class="block text-sm font-medium text-gray-700">Confirm New Password</label>
backend/src/static/settings.html:                                                <input type="password" name="confirm-password" id="confirm-password" class="input-field mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none sm:text-sm">
backend/src/static/settings.html:                                                <button type="button" id="change-password-btn" class="btn-primary py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white focus:outline-none">
backend/src/static/settings.html:            const changePasswordBtn = document.getElementById('change-password-btn');
backend/src/static/settings.html:            changePasswordBtn.addEventListener('click', () => {
backend/src/static/settings.html:                const currentPassword = document.getElementById('current-password').value;
backend/src/static/settings.html:                const newPassword = document.getElementById('new-password').value;
backend/src/static/settings.html:                const confirmPassword = document.getElementById('confirm-password').value;
backend/src/static/settings.html:                if (newPassword !== confirmPassword) {
backend/src/static/settings.html:                    document.getElementById('current-password').value = '';
backend/src/static/settings.html:                    document.getElementById('new-password').value = '';
backend/src/static/settings.html:                    document.getElementById('confirm-password').value = '';
backend/src/static/landing.html:                    <label for="login-password" class="block text-sm font-medium text-gray-700 mb-1">Password</label>
backend/src/static/landing.html:                    <label for="signup-password" class="block text-sm font-medium text-gray-700 mb-1">Password</label>
backend/src/static/landing.html:                this.passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$/;
backend/src/static/landing.html:                if (!password || typeof password !== 'string') {
backend/src/static/landing.html:                if (!formData.password || formData.password.trim() === '') {
backend/src/static/landing.html:                    errors.password = 'Password is required';
backend/src/static/landing.html:                const passwordResult = this.validatePassword(formData.password);
backend/src/static/landing.html:                    errors.password = passwordResult.message;
backend/src/static/landing.html:                const fields = form.querySelectorAll('input[type="email"], input[type="password"], input[type="text"], input[type="tel"]');
backend/src/static/dev-login.html:                <label for="password" class="block text-sm font-medium text-gray-300 mb-1">Password</label>
backend/src/static/dev-login.html:                <input type="password" id="password" name="password" placeholder="••••••••" required
backend/src/static/dev-login.html:                const password = document.getElementById('password').value;
backend/src/static/admin.js:                            <input type="password" id="adminPassword" required
backend/src/static/admin.js:        const password = document.getElementById('adminPassword').value;
backend/src/static/admin.html:                            <input type="password" id="newUserPassword" required
backend/src/static/index.html:                    <input type="password" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
backend/src/static/index.html:                    <input type="password" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
backend/src/static/templates/landing.html:                    <label for="login-password" class="block text-sm font-medium text-gray-700 mb-1">Password</label>
backend/src/static/templates/landing.html:                    <label for="signup-password" class="block text-sm font-medium text-gray-700 mb-1">Password</label>
backend/src/static/templates/landing.html:                this.passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$/;
backend/src/static/templates/landing.html:                if (!password || typeof password !== 'string') {
backend/src/static/templates/landing.html:                if (!formData.password || formData.password.trim() === '') {
backend/src/static/templates/landing.html:                    errors.password = 'Password is required';
backend/src/static/templates/landing.html:                const passwordResult = this.validatePassword(formData.password);
backend/src/static/templates/landing.html:                    errors.password = passwordResult.message;
backend/src/static/templates/landing.html:                const fields = form.querySelectorAll('input[type="email"], input[type="password"], input[type="text"], input[type="tel"]');
backend/src/static/index.html.original:                    <input type="password" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
backend/src/static/index.html.original:                    <input type="password" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent">
backend/src/utils/input_validation.py:            password_validation = cls.validate_password_strength(data["password"])
backend/src/utils/input_validation.py:                errors["password"] = password_validation["message"]
backend/src/utils/config.py:    password_min_length: int = 8
backend/src/utils/config.py:                password_min_length=int(os.getenv("PASSWORD_MIN_LENGTH", "8")),
backend/src/utils/validation.py:    PASSWORD_PATTERN = r"^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$"
backend/src/utils/route_validation.py:        self.password_pattern = re.compile(
backend/src/utils/security.py:    password_min_length: int = 8
backend/src/utils/security.py:    password_require_special: bool = True
backend/src/utils/security.py:    password_require_number: bool = True
backend/src/utils/security.py:    password_require_uppercase: bool = True
backend/src/utils/security.py:        common_passwords = {
backend/src/utils/__init__.py:validate_password = InputValidator.validate_password
backend/src/services/user_service.py:        user_id: int, current_password: str, new_password: str, user_type: str = "user"
backend/src/services/communication.py:        self.smtp_password = os.getenv("SMTP_PASSWORD")
